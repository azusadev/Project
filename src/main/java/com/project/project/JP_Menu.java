/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.project.project;

import java.awt.CardLayout;
import java.awt.Dimension;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

/**
 *
 * @author reden
 */
public class JP_Menu extends javax.swing.JPanel implements MouseListener{

    /**
     * Creates new form JP_Menu
     */
    public JP_Menu() {
        initComponents();
        this.setBackground(ColorTheme.secondaryColor);
        category_area.setBackground(ColorTheme.secondaryColor);
        receipt_area.setBackground(ColorTheme.secondaryColor);
        menu_area.setBackground(ColorTheme.secondaryColor);
        this.setBackground(ColorTheme.secondaryColor);

                                
        //setting category scroll pane
        category_sp.getHorizontalScrollBar().setPreferredSize(new Dimension(0,0));
        category_sp.getHorizontalScrollBar().setUnitIncrement(36);
        category_sp.getViewport().setBorder(null);
        category_sp.setViewportBorder(null);
        category_sp.setBorder(null);
        
        for (int i = 0; i < 30; i++) {
            System.out.println(i);
            String name = "Category " + (i+1); 
            Item_Category temp = new Item_Category(name);
            temp.addMouseListener(this);
            c_content.add(temp);
            menu_area.add(new JP_MenuCard(this, name), name);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        receipt_area = new javax.swing.JPanel();
        menu_area = new javax.swing.JPanel();
        category_area = new javax.swing.JPanel();
        category_sp = new javax.swing.JScrollPane();
        c_container = new javax.swing.JPanel();
        c_content = new javax.swing.JPanel();

        setBackground(new java.awt.Color(197, 214, 222));
        setMaximumSize(new java.awt.Dimension(1200, 650));
        setMinimumSize(new java.awt.Dimension(1200, 650));
        setPreferredSize(new java.awt.Dimension(1200, 650));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        receipt_area.setBackground(new java.awt.Color(197, 214, 222));

        javax.swing.GroupLayout receipt_areaLayout = new javax.swing.GroupLayout(receipt_area);
        receipt_area.setLayout(receipt_areaLayout);
        receipt_areaLayout.setHorizontalGroup(
            receipt_areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        receipt_areaLayout.setVerticalGroup(
            receipt_areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );

        add(receipt_area, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 0, 500, 650));

        menu_area.setBackground(new java.awt.Color(197, 214, 222));
        menu_area.setPreferredSize(new java.awt.Dimension(700, 580));
        menu_area.setLayout(new java.awt.CardLayout());
        add(menu_area, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 700, 580));

        category_area.setBackground(new java.awt.Color(197, 214, 222));

        category_sp.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        category_sp.setPreferredSize(new java.awt.Dimension(660, 30));
        category_sp.setViewportView(c_content);

        c_container.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        c_content.setOpaque(false);
        c_content.setLayout(new java.awt.GridLayout(1, 0, 5, 0));
        c_container.add(c_content);

        category_sp.setViewportView(c_container);

        javax.swing.GroupLayout category_areaLayout = new javax.swing.GroupLayout(category_area);
        category_area.setLayout(category_areaLayout);
        category_areaLayout.setHorizontalGroup(
            category_areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(category_areaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(category_sp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        category_areaLayout.setVerticalGroup(
            category_areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(category_areaLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(category_sp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        add(category_area, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 70));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel c_container;
    private javax.swing.JPanel c_content;
    private javax.swing.JPanel category_area;
    private javax.swing.JScrollPane category_sp;
    private javax.swing.JPanel menu_area;
    private javax.swing.JPanel receipt_area;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
    }

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        if(e.getComponent() instanceof Item_Category)
        {
            Item_Category t = (Item_Category) e.getComponent();
            CardLayout c = (CardLayout)menu_area.getLayout();
            c.show(menu_area, t.getCategoryName());
        }
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }
}
